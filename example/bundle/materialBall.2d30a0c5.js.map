{"mappings":"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","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, camera, fsQuad, materials;\nlet envMap, envMapGenerator;\nlet samplesEl;\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t\tmatte: false,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tenvironmentIntensity: 3,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.05,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PhysicalCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.camera = camera;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tenvMap = texture;\n\n\t\t\t\tupdateEnvBlur();\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshStandardMaterial();\n\t\t\tconst material2 = new THREE.MeshStandardMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( camera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( camera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tcamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( camera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( camera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( camera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( camera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( camera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tcamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tptRenderer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.materials.setMatte( 0, params.material1.matte );\n\tptRenderer.material.materials.setMatte( 1, params.material2.matte );\n\tptRenderer.material.materials.setMatte( 2, params.material3.matte );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( camera );\n\n\tcamera.updateMatrixWorld();\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$camera","$0473c5c83fd2a77a$var$fsQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$envMap","$0473c5c83fd2a77a$var$envMapGenerator","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","matte","material2","material3","multipleImportanceSampling","stableNoise","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","m2","m3","materials","textures","setMatte","physicalCamera","updateMatrixWorld","i","l","update","autoClear","render","innerText","Math","floor","samples","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","position","PathTracingRenderer","alpha","camera","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","map","target","texture","blending","CustomBlending","$5Rd1x","OrbitControls","addEventListener","getElementById","BlurredEnvMapGenerator","envMapPromise","Promise","resolve","$891vQ","RGBELoader","load","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderBufferGeometry","MeshStandardMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","result","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","all","remove","classList","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","envFolder","PI","v","setFromMatrix4","Matrix4","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","close","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}