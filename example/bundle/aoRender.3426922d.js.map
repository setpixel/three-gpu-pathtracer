{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/workers/PathTracingSceneWorker.js","src/core/PathTracingSceneGenerator.js","node_modules/three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-fcae82002fa0f25d.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-cfe0a636622ba844.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import { PathTracingSceneGenerator } from '../core/PathTracingSceneGenerator.js';\nimport { SAH } from 'three-mesh-bvh';\nimport { GenerateMeshBVHWorker } from 'three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js';\n\nexport class PathTracingSceneWorker extends PathTracingSceneGenerator {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.bvhGenerator = new GenerateMeshBVHWorker();\n\n\t}\n\n\tgenerate( scene, options = {} ) {\n\n\t\tconst { bvhGenerator } = this;\n\t\tconst { geometry, materials, textures } = this.prepScene( scene );\n\n\t\tconst bvhOptions = { strategy: SAH, ...options, maxLeafTris: 1 };\n\t\tconst bvhPromise = bvhGenerator.generate( geometry, bvhOptions );\n\t\treturn bvhPromise.then( bvh => {\n\n\t\t\treturn {\n\t\t\t\tscene,\n\t\t\t\tmaterials,\n\t\t\t\ttextures,\n\t\t\t\tbvh,\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.bvhGenerator.dispose();\n\n\t}\n\n}\n","import { Mesh } from 'three';\nimport { SAH, MeshBVH, StaticGeometryGenerator } from 'three-mesh-bvh';\nimport { mergeMeshes } from '../utils/GeometryPreparationUtils.js';\n\nexport class PathTracingSceneGenerator {\n\n\tprepScene( scene ) {\n\n\t\tconst meshes = [];\n\t\tscene.traverse( c => {\n\n\t\t\tif ( c.isSkinnedMesh || c.isMesh && c.morphTargetInfluences ) {\n\n\t\t\t\tconst generator = new StaticGeometryGenerator( c );\n\t\t\t\tgenerator.applyWorldTransforms = false;\n\t\t\t\tconst mesh = new Mesh(\n\t\t\t\t\tgenerator.generate(),\n\t\t\t\t\tc.material,\n\t\t\t\t);\n\t\t\t\tmesh.matrixWorld.copy( c.matrixWorld );\n\t\t\t\tmesh.matrix.copy( c.matrixWorld );\n\t\t\t\tmesh.matrix.decompose( mesh.position, mesh.quaternion, mesh.scale );\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t} else if ( c.isMesh ) {\n\n\t\t\t\tmeshes.push( c );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn mergeMeshes( meshes, {\n\t\t\tattributes: [ 'position', 'normal', 'tangent', 'uv' ],\n\t\t} );\n\n\t}\n\n\tgenerate( scene, options = {} ) {\n\n\t\tconst { materials, textures, geometry } = this.prepScene( scene );\n\t\tconst bvhOptions = { strategy: SAH, ...options, maxLeafTris: 1 };\n\t\treturn {\n\t\t\tscene,\n\t\t\tmaterials,\n\t\t\ttextures,\n\t\t\tbvh: new MeshBVH( geometry, bvhOptions ),\n\t\t};\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\r\nimport { MeshBVH } from '../core/MeshBVH.js';\r\n\r\nexport class GenerateMeshBVHWorker {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.running = false;\r\n\t\tthis.worker = new Worker( new URL( './generateAsync.worker.js', import.meta.url ), { type: 'module' } );\r\n\r\n\t}\r\n\r\n\tgenerate( geometry, options = {} ) {\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst { worker } = this;\r\n\t\tthis.running = true;\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tworker.onmessage = e => {\r\n\r\n\t\t\t\tthis.running = false;\r\n\t\t\t\tconst { data } = e;\r\n\r\n\t\t\t\tif ( data.error ) {\r\n\r\n\t\t\t\t\treject( new Error( data.error ) );\r\n\t\t\t\t\tworker.onmessage = null;\r\n\r\n\t\t\t\t} else if ( data.serialized ) {\r\n\r\n\t\t\t\t\tconst { serialized, position } = data;\r\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\r\n\t\t\t\t\tconst boundsOptions = Object.assign( {\r\n\r\n\t\t\t\t\t\tsetBoundingBox: true,\r\n\r\n\t\t\t\t\t}, options );\r\n\r\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\r\n\t\t\t\t\t// webworker transfer.\r\n\t\t\t\t\tgeometry.attributes.position.array = position;\r\n\t\t\t\t\tif ( geometry.index ) {\r\n\r\n\t\t\t\t\t\tgeometry.index.array = serialized.index;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\r\n\t\t\t\t\t\tgeometry.setIndex( newIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\r\n\r\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve( bvh );\r\n\t\t\t\t\tworker.onmessage = null;\r\n\r\n\t\t\t\t} else if ( options.onProgress ) {\r\n\r\n\t\t\t\t\toptions.onProgress( data.progress );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\r\n\t\t\tconst position = geometry.attributes.position.array;\r\n\r\n\t\t\tif ( position.isInterleavedBufferAttribute || index && index.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst transferrables = [ position ];\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\ttransferrables.push( index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tworker.postMessage( {\r\n\r\n\t\t\t\tindex,\r\n\t\t\t\tposition,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\t...options,\r\n\t\t\t\t\tonProgress: null,\r\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\r\n\t\t\t\t\tgroups: [ ... geometry.groups ],\r\n\t\t\t\t},\r\n\r\n\t\t\t}, transferrables.map( arr => arr.buffer ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.worker.terminate();\r\n\r\n\t}\r\n\r\n\tterminate() {\r\n\r\n\t\tconsole.warn( 'GenerateMeshBVHWorker: \"terminate\" is deprecated. Use \"dispose\" instead.' );\r\n\t\tthis.dispose();\r\n\r\n\t}\r\n\r\n}\r\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jsyN8\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"vZvyk\\\":\\\"aoRender.3426922d.js\\\",\\\"jsyN8\\\":\\\"generateAsync.worker.b2811d07.js\\\"}\"));"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$hWj76","parcelRequire","$968516f0efc273ba$export$5499aeafc5a5667b","PathTracingSceneGenerator","constructor","super","this","bvhGenerator","$a8VBx","GenerateMeshBVHWorker","generate","scene","options","geometry","materials","textures","prepScene","bvhOptions","strategy","$8Zfx2","SAH","maxLeafTris","then","bvh","dispose","$ilwiq","$d0f6adfc7402c638$export$245b5237bb7038ea","meshes","traverse","c","isSkinnedMesh","isMesh","morphTargetInfluences","generator","StaticGeometryGenerator","applyWorldTransforms","mesh","Mesh","material","matrixWorld","copy","matrix","decompose","position","quaternion","scale","push","$jM3IF","mergeMeshes","attributes","MeshBVH","$762755cd5891d020$export$426cc6213ad628cf","running","worker","Worker","Promise","resolve","reject","onmessage","e","data","error","serialized","$6KVZ3","deserialize","setIndex","boundsOptions","assign","setBoundingBox","array","index","newIndex","BufferAttribute","boundingBox","getBoundingBox","Box3","onProgress","progress","position1","isInterleavedBufferAttribute","transferrables","postMessage","includedProgressCallback","Boolean","groups","map","arr","buffer","terminate","console","warn","$7ryUf","$1e199522c06e4b04$var$url","URL","import","meta","url","module","exports","toString","origin","workerUrl","isESM","self","location","source","JSON","stringify","createObjectURL","Blob","type","register","parse"],"version":3,"file":"aoRender.3426922d.js.map"}